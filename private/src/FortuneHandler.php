<?php
// /home/bot.dailymu.com/private/src/FortuneHandler.php
require_once __DIR__ . '/DatabaseHandler.php';
require_once __DIR__ . '/UserHandler.php';
require_once __DIR__ . '/TagHandler.php';
require_once __DIR__ . '/CacheHandler.php';

class FortuneHandler {
    private $db;
    private $cache;
    private $userHandler;
    private $tagHandler;

    // р╕Ыр╕гр╕░р╣Ар╕ар╕Чр╕Вр╕нр╕Зр╕Бр╕▓р╕гр╕Фр╕╣р╕Фр╕зр╕З
    private const FORTUNE_TYPES = [
        'daily' => 'р╕Фр╕зр╕Зр╕Ыр╕гр╕░р╕Ир╕│р╕зр╕▒р╕Щ',
        'zodiac' => 'р╕Фр╕зр╕Зр╕Хр╕▓р╕бр╕гр╕▓р╕ир╕╡',
        'tarot' => 'р╣Др╕Юр╣Ир╕Чр╕▓р╣Вр╕гр╕Хр╣М',
        'love' => 'р╕Фр╕зр╕Зр╕Др╕зр╕▓р╕бр╕гр╕▒р╕Б',
        'work' => 'р╕Фр╕зр╕Зр╕Бр╕▓р╕гр╕Зр╕▓р╕Щ',
        'finance' => 'р╕Фр╕зр╕Зр╕Бр╕▓р╕гр╣Ар╕Зр╕┤р╕Щ'
    ];

    // р╕лр╕бр╕зр╕Фр╕лр╕бр╕╣р╣Ир╕Вр╕нр╕Зр╕Фр╕зр╕З
    private const FORTUNE_ASPECTS = [
        'overall' => ['р╕Фр╕зр╕Зр╣Вр╕Фр╕вр╕гр╕зр╕б', 'р╕кр╕Цр╕▓р╕Щр╕Бр╕▓р╕гр╕Ур╣М', 'р╕Юр╕ер╕▒р╕Зр╕Кр╕╡р╕зр╕┤р╕Х'],
        'love' => ['р╕Др╕зр╕▓р╕бр╕гр╕▒р╕Б', 'р╕Др╕╣р╣Ир╕Др╕гр╕нр╕З', 'р╕Др╕зр╕▓р╕бр╕кр╕▒р╕бр╕Юр╕▒р╕Щр╕Шр╣М'],
        'work' => ['р╕Бр╕▓р╕гр╕Зр╕▓р╕Щ', 'р╕нр╕▓р╕Кр╕╡р╕Ю', 'р╕Др╕зр╕▓р╕бр╕Бр╣Йр╕▓р╕зр╕лр╕Щр╣Йр╕▓'],
        'finance' => ['р╕Бр╕▓р╕гр╣Ар╕Зр╕┤р╕Щ', 'р╣Вр╕Кр╕Др╕ер╕▓р╕а', 'р╕Чр╕гр╕▒р╕Юр╕вр╣Мр╕кр╕┤р╕Щ'],
        'health' => ['р╕кр╕╕р╕Вр╕ар╕▓р╕Ю', 'р╕Юр╕ер╕▒р╕Зр╕Бр╕▓р╕в', 'р╕Юр╕ер╕▒р╕Зр╣Гр╕И']
    ];

    public function __construct() {
        $this->db = DatabaseHandler::getInstance();
        $this->cache = new CacheHandler();
        $this->userHandler = new UserHandler();
        $this->tagHandler = new TagHandler();
    }

// р╣Ар╕Юр╕┤р╣Ир╕бр╕Яр╕▒р╕Зр╕Бр╣Мр╕Кр╕▒р╕Щ getFortune
    private function getFortune($userId, $type, $date = null) {
        try {
            $sql = "SELECT * FROM fortune_history 
                    WHERE user_id = ? 
                    AND fortune_type = ?";
            $params = [$userId, $type];

            if ($date) {
                $sql .= " AND DATE(created_at) = ?";
                $params[] = $date;
            }

            $sql .= " ORDER BY created_at DESC LIMIT 1";

            return $this->db->query($sql, $params)->fetch();

        } catch (Exception $e) {
            error_log("Error in getFortune: " . $e->getMessage());
            return null;
        }
    }

    public function getDailyFortune($userId) {
        try {
            // р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕Бр╕▓р╕гр╕Фр╕╣р╕Фр╕зр╕Зр╕зр╕▒р╕Щр╕Щр╕╡р╣Й
            $today = date('Y-m-d');
            $existingFortune = $this->getFortune($userId, 'daily', $today);
            
            if ($existingFortune) {
                return json_decode($existingFortune['fortune_result'], true);
            }

            // р╕кр╕гр╣Йр╕▓р╕Зр╕Др╕│р╕Чр╕│р╕Щр╕▓р╕вр╣Гр╕лр╕бр╣И
            $user = $this->userHandler->getUserProfile($userId);
            $userTags = $this->tagHandler->generateUserProfile($userId);
            
            $fortune = $this->generatePersonalizedFortune($user, $userTags);
            
            // р╕Ър╕▒р╕Щр╕Чр╕╢р╕Бр╕Др╕│р╕Чр╕│р╕Щр╕▓р╕в
            return $this->saveFortune($userId, 'daily', 'р╕Фр╕зр╕Зр╕зр╕▒р╕Щр╕Щр╕╡р╣Й', $fortune);

        } catch (Exception $e) {
            error_log("Error in getDailyFortune: " . $e->getMessage());
            throw $e;
        }
    }

    /**
     * р╕Фр╕╢р╕З tags р╕Чр╕╡р╣Ир╣Ар╕Бр╕╡р╣Ир╕вр╕зр╕Вр╣Йр╕нр╕Зр╕Бр╕▒р╕Ър╣Бр╕Хр╣Ир╕ер╕░р╕Фр╣Йр╕▓р╕Щ
     */
    private function getRelevantTags($userTags, $aspect) {
        $relevantTags = [];
        
        // р╕Бр╕│р╕лр╕Щр╕Ф keywords р╕кр╕│р╕лр╕гр╕▒р╕Ър╣Бр╕Хр╣Ир╕ер╕░р╕Фр╣Йр╕▓р╕Щ
        $aspectKeywords = [
            'overall' => ['personality', 'life_events', 'general'],
            'love' => ['relationship', 'love', 'partner'],
            'work' => ['work', 'career', 'education', 'skills'],
            'finance' => ['finance', 'investment', 'business'],
            'health' => ['health', 'exercise', 'diet']
        ];

        // р╕Фр╕╢р╕З tags р╕Чр╕╡р╣Ир╣Ар╕Бр╕╡р╣Ир╕вр╕зр╕Вр╣Йр╕нр╕З
        if (isset($userTags[$aspect])) {
            $relevantTags = array_merge($relevantTags, $userTags[$aspect]);
        }

        // р╕Фр╕╢р╕З tags р╕Ир╕▓р╕Б keywords р╕Чр╕╡р╣Ир╣Ар╕Бр╕╡р╣Ир╕вр╕зр╕Вр╣Йр╕нр╕З
        if (isset($aspectKeywords[$aspect])) {
            foreach ($aspectKeywords[$aspect] as $keyword) {
                if (isset($userTags[$keyword])) {
                    $relevantTags = array_merge($relevantTags, $userTags[$keyword]);
                }
            }
        }

        return $relevantTags;
    }

    /**
     * р╕кр╕гр╣Йр╕▓р╕Зр╕Др╕│р╕Чр╕│р╕Щр╕▓р╕вр╕кр╕│р╕лр╕гр╕▒р╕Ър╣Бр╕Хр╣Ир╕ер╕░р╕Фр╣Йр╕▓р╕Щ
     */
    private function generateAspectFortune($aspect, $relevantTags) {
        $fortune = '';
        
        switch ($aspect) {
            case 'overall':
                $fortune = $this->generateOverallFortune($relevantTags);
                break;
            case 'love':
                $fortune = $this->generateLoveFortune($relevantTags);
                break;
            case 'work':
                $fortune = $this->generateWorkFortune($relevantTags);
                break;
            case 'finance':
                $fortune = $this->generateFinanceFortune($relevantTags);
                break;
            case 'health':
                $fortune = $this->generateHealthFortune($relevantTags);
                break;
        }

        return $fortune;
    }

    /**
     * р╕кр╕гр╣Йр╕▓р╕Зр╕Др╕│р╕Чр╕│р╕Щр╕▓р╕вр╕Фр╣Йр╕▓р╕Щр╕Хр╣Ир╕▓р╕Зр╣Ж
     */
    private function generateOverallFortune($tags) {
        $base = "р╕Фр╕зр╕Зр╣Вр╕Фр╕вр╕гр╕зр╕бр╕зр╕▒р╕Щр╕Щр╕╡р╣Йр╕нр╕вр╕╣р╣Ир╣Гр╕Щр╣Ар╕Бр╕Ур╕Ср╣Мр╕Фр╕╡ тЬи ";
        
        if (!empty($tags['personality'])) {
            $base .= "р╕Фр╣Йр╕зр╕вр╕Ър╕╕р╕Др╕ер╕┤р╕Бр╕Чр╕╡р╣И{$tags['personality']} р╕Чр╕│р╣Гр╕лр╣Йр╕Др╕╕р╕Ур╕бр╕╡р╣Ар╕кр╕Щр╣Ир╕лр╣Мр╣Бр╕ер╕░р╣Ар╕Ыр╣Зр╕Щр╕Чр╕╡р╣Ир╕Кр╕╖р╣Ир╕Щр╕Кр╕нр╕Ър╕Вр╕нр╕Зр╕Ьр╕╣р╣Йр╕Др╕Щр╕гр╕нр╕Ър╕Вр╣Йр╕▓р╕З ";
        }

        return $base . "р╕Др╕зр╕гр╕гр╕▒р╕Бр╕йр╕▓р╕Др╕зр╕▓р╕бр╕бр╕▒р╣Ир╕Щр╣Гр╕Ир╣Бр╕ер╕░р╕Чр╕│р╕кр╕┤р╣Ир╕Зр╕Хр╣Ир╕▓р╕Зр╣Ж р╕Фр╣Йр╕зр╕вр╕Др╕зр╕▓р╕бр╕гр╕нр╕Ър╕Др╕нр╕Ъ ЁЯМЯ";
    }

    private function generateLoveFortune($tags) {
        $base = "р╕Фр╣Йр╕▓р╕Щр╕Др╕зр╕▓р╕бр╕гр╕▒р╕Б ";
        
        if (isset($tags['relationship_status'])) {
            switch ($tags['relationship_status']) {
                case 'р╣Вр╕кр╕Ф':
                    $base .= "р╕Др╕Щр╣Вр╕кр╕Фр╕бр╕╡р╣Ар╕Бр╕Ур╕Ср╣Мр╕Ир╕░р╣Др╕Фр╣Йр╕Юр╕Ър╣Ар╕Ир╕нр╕Др╕Щр╕Чр╕╡р╣Ир╕Цр╕╣р╕Бр╣Гр╕И р╕нр╕▓р╕Ир╣Ар╕Ыр╣Зр╕Щр╕Др╕Щр╕Чр╕╡р╣Ир╕нр╕вр╕╣р╣Ир╣Гр╕Щр╕Чр╕╡р╣Ир╕Чр╕│р╕Зр╕▓р╕Щр╕лр╕гр╕╖р╕нр╕кр╕▒р╕Зр╕Др╕бр╣Гр╕Бр╕ер╣Йр╕Хр╕▒р╕з ЁЯТХ ";
                    break;
                case 'р╕бр╕╡р╣Бр╕Яр╕Щ':
                    $base .= "р╕Др╕╣р╣Ир╕гр╕▒р╕Бр╕Ир╕░р╕бр╕╡р╕Др╕зр╕▓р╕бр╣Ар╕Вр╣Йр╕▓р╣Гр╕Ир╕Бр╕▒р╕Щр╕бр╕▓р╕Бр╕Вр╕╢р╣Йр╕Щ р╣Ар╕Ыр╣Зр╕Щр╕Кр╣Ир╕зр╕Зр╣Ар╕зр╕ер╕▓р╕Чр╕╡р╣Ир╕Фр╕╡р╣Гр╕Щр╕Бр╕▓р╕гр╕зр╕▓р╕Зр╣Бр╕Ьр╕Щр╕нр╕Щр╕▓р╕Др╕Хр╕гр╣Ир╕зр╕бр╕Бр╕▒р╕Щ ЁЯТС ";
                    break;
                default:
                    $base .= "р╕Др╕зр╕▓р╕бр╕гр╕▒р╕Бр╕Ир╕░р╕бр╕╡р╕Бр╕▓р╕гр╣Ар╕Ыр╕ер╕╡р╣Ир╕вр╕Щр╣Бр╕Ыр╕ер╕Зр╣Гр╕Щр╕Чр╕▓р╕Зр╕Чр╕╡р╣Ир╕Фр╕╡ р╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕Вр╣Бр╕ер╕░р╕Др╕зр╕▓р╕бр╣Ар╕Вр╣Йр╕▓р╣Гр╕Ир╣Ар╕Юр╕┤р╣Ир╕бр╕Вр╕╢р╣Йр╕Щ тЭдя╕П ";
            }
        }

        return $base;
    }

    private function generateWorkFortune($tags) {
        return "р╕Бр╕▓р╕гр╕Зр╕▓р╕Щр╕бр╕╡р╕Др╕зр╕▓р╕бр╕Бр╣Йр╕▓р╕зр╕лр╕Щр╣Йр╕▓ р╕нр╕▓р╕Ир╣Др╕Фр╣Йр╕гр╕▒р╕Ър╣Вр╕нр╕Бр╕▓р╕кр╕лр╕гр╕╖р╕нр╣Вр╕Ыр╕гр╣Ар╕Ир╕Бр╕Хр╣Мр╣Гр╕лр╕бр╣Ир╣Ж р╕Чр╕╡р╣Ир╕Чр╣Йр╕▓р╕Чр╕▓р╕в ЁЯТк р╕Др╕зр╕гр╕Хр╕▒р╣Йр╕Зр╣Гр╕Ир╕Чр╕│р╕Зр╕▓р╕Щр╣Бр╕ер╕░р╣Бр╕кр╕Фр╕Зр╕ир╕▒р╕Бр╕вр╕ар╕▓р╕Юр╣Гр╕лр╣Йр╣Ар╕Хр╣Зр╕бр╕Чр╕╡р╣И ЁЯУИ";
    }

    private function generateFinanceFortune($tags) {
        return "р╕Фр╣Йр╕▓р╕Щр╕Бр╕▓р╕гр╣Ар╕Зр╕┤р╕Щ р╕бр╕╡р╣Ар╕Бр╕Ур╕Ср╣Мр╣Др╕Фр╣Йр╕гр╕▒р╕Ър╣Вр╕Кр╕Др╕ер╕▓р╕а р╕нр╕▓р╕Ир╕бр╕╡р╕гр╕▓р╕вр╣Др╕Фр╣Йр╕Юр╕┤р╣Ар╕ир╕йр╣Ар╕Вр╣Йр╕▓р╕бр╕▓ ЁЯТ░ р╣Бр╕Хр╣Ир╕Др╕зр╕гр╕гр╕░р╕зр╕▒р╕Зр╣Ар╕гр╕╖р╣Ир╕нр╕Зр╕Бр╕▓р╕гр╣Гр╕Кр╣Йр╕Ир╣Ир╕▓р╕вр╣Бр╕ер╕░р╕зр╕▓р╕Зр╣Бр╕Ьр╕Щр╕Бр╕▓р╕гр╣Ар╕Зр╕┤р╕Щр╣Гр╕лр╣Йр╕гр╕нр╕Ър╕Др╕нр╕Ъ ЁЯУК";
    }

    private function generateHealthFortune($tags) {
        return "р╕кр╕╕р╕Вр╕ар╕▓р╕Юр╣Вр╕Фр╕вр╕гр╕зр╕бр╣Бр╕Вр╣Зр╕Зр╣Бр╕гр╕Зр╕Фр╕╡ ЁЯТк р╣Бр╕Хр╣Ир╕Др╕зр╕гр╕гр╕░р╕зр╕▒р╕Зр╣Ар╕гр╕╖р╣Ир╕нр╕Зр╕Бр╕▓р╕гр╕Юр╕▒р╕Бр╕Ьр╣Ир╕нр╕Щ р╕Юр╕вр╕▓р╕вр╕▓р╕бр╕Щр╕нр╕Щр╣Гр╕лр╣Йр╣Ар╕Юр╕╡р╕вр╕Зр╕Юр╕нр╣Бр╕ер╕░р╕нр╕нр╕Бр╕Бр╕│р╕ер╕▒р╕Зр╕Бр╕▓р╕вр╕кр╕бр╣Ир╕│р╣Ар╕кр╕бр╕н ЁЯзШтАНтЩАя╕П";
    }

    /**
     * р╕кр╕гр╣Йр╕▓р╕Зр╕Др╕│р╣Бр╕Щр╕░р╕Щр╕│
     */
    private function generateAdvice($fortune) {
        $advice = [
            "р╕Юр╕вр╕▓р╕вр╕▓р╕бр╕бр╕нр╕Зр╣Вр╕ер╕Бр╣Гр╕Щр╣Бр╕Зр╣Ир╕Фр╕╡р╣Бр╕ер╕░р╕гр╕▒р╕Бр╕йр╕▓р╕Др╕зр╕▓р╕бр╕бр╕▒р╣Ир╕Щр╣Гр╕Ир╣Др╕зр╣Й ЁЯМЯ",
            "р╕лр╕бр╕▒р╣Ир╕Щр╕Чр╕│р╕Ър╕╕р╕Нр╣Бр╕ер╕░р╕кр╕зр╕Фр╕бр╕Щр╕Хр╣Мр╣Ар╕Юр╕╖р╣Ир╕нр╣Ар╕кр╕гр╕┤р╕бр╕Фр╕зр╕Зр╕Кр╕░р╕Хр╕▓ ЁЯЩП",
            "р╣Гр╕кр╣Ир╣Гр╕Ир╣Ар╕гр╕╖р╣Ир╕нр╕Зр╕кр╕╕р╕Вр╕ар╕▓р╕Юр╣Бр╕ер╕░р╕Бр╕▓р╕гр╕Юр╕▒р╕Бр╕Ьр╣Ир╕нр╕Щр╣Гр╕лр╣Йр╣Ар╕Юр╕╡р╕вр╕Зр╕Юр╕н ЁЯТк",
            "р╕гр╕░р╕бр╕▒р╕Фр╕гр╕░р╕зр╕▒р╕Зр╕Бр╕▓р╕гр╣Гр╕Кр╣Йр╕Ир╣Ир╕▓р╕вр╣Бр╕ер╕░р╕зр╕▓р╕Зр╣Бр╕Ьр╕Щр╕Бр╕▓р╕гр╣Ар╕Зр╕┤р╕Щр╣Гр╕лр╣Йр╕гр╕нр╕Ър╕Др╕нр╕Ъ ЁЯТ░",
            "р╕гр╕▒р╕Бр╕йр╕▓р╕Др╕зр╕▓р╕бр╕кр╕▒р╕бр╕Юр╕▒р╕Щр╕Шр╣Мр╕Чр╕╡р╣Ир╕Фр╕╡р╕Бр╕▒р╕Ър╕Др╕Щр╕гр╕нр╕Ър╕Вр╣Йр╕▓р╕З тЭдя╕П"
        ];

        return $advice[array_rand($advice)];
    }

    /**
     * р╕кр╕гр╣Йр╕▓р╕Зр╣Ар╕ер╕Вр╕Щр╕│р╣Вр╕Кр╕Д
     */
    private function generateLuckyNumbers() {
        $numbers = range(0, 9);
        shuffle($numbers);
        return array_slice($numbers, 0, 3);  // р╣Ар╕ер╕╖р╕нр╕Б 3 р╕Хр╕▒р╕зр╣Ар╕ер╕В
    }

    /**
     * р╕кр╕гр╣Йр╕▓р╕Зр╕кр╕╡р╕бр╕Зр╕Др╕е
     */
    private function generateLuckyColors() {
        $colors = [
            'р╣Бр╕Фр╕З' => 'тЭдя╕П',
            'р╕Кр╕бр╕Юр╕╣' => 'ЁЯТЧ',
            'р╕кр╣Йр╕б' => 'ЁЯзб',
            'р╣Ар╕лр╕ер╕╖р╕нр╕З' => 'ЁЯТЫ',
            'р╣Ар╕Вр╕╡р╕вр╕з' => 'ЁЯТЪ',
            'р╕Яр╣Йр╕▓' => 'ЁЯТЩ',
            'р╕Щр╣Йр╕│р╣Ар╕Зр╕┤р╕Щ' => 'ЁЯМК',
            'р╕бр╣Ир╕зр╕З' => 'ЁЯТЬ',
            'р╕Вр╕▓р╕з' => 'тЪк',
            'р╕Фр╕│' => 'тЪл'
        ];
        
        $colorKeys = array_keys($colors);
        shuffle($colorKeys);
        $selectedColors = array_slice($colorKeys, 0, 2);  // р╣Ар╕ер╕╖р╕нр╕Б 2 р╕кр╕╡
        
        $result = [];
        foreach ($selectedColors as $color) {
            $result[$color] = $colors[$color];
        }
        
        return $result;
    }

    /**
     * р╕кр╕гр╣Йр╕▓р╕Зр╕Др╕│р╕Чр╕│р╕Щр╕▓р╕вр╕кр╣Ир╕зр╕Щр╕Ър╕╕р╕Др╕Др╕е
     */
    private function generatePersonalizedFortune($user, $userTags) {
        $fortune = [];

        // р╕Фр╕╣р╕Фр╕зр╕Зр╣Бр╕Хр╣Ир╕ер╕░р╕Фр╣Йр╕▓р╕Щ
        foreach (self::FORTUNE_ASPECTS as $aspect => $keywords) {
            $relevantTags = $this->getRelevantTags($userTags, $aspect);
            $fortune[$aspect] = $this->generateAspectFortune($aspect, $relevantTags);
        }

        // р╣Ар╕Юр╕┤р╣Ир╕бр╣Ар╕ер╕Вр╣Бр╕ер╕░р╕кр╕╡р╕бр╕Зр╕Др╕е
        $fortune['lucky_numbers'] = $this->generateLuckyNumbers();
        $fortune['lucky_colors'] = $this->generateLuckyColors();

        // р╣Ар╕Юр╕┤р╣Ир╕бр╕Др╕│р╣Бр╕Щр╕░р╕Щр╕│
        $fortune['advice'] = $this->generateAdvice($fortune);

        // р╕Ир╕▒р╕Фр╕гр╕╣р╕Ыр╣Бр╕Ър╕Ър╕Ьр╕ер╕ер╕▒р╕Юр╕Шр╣М
        return [
            'overall' => $fortune['overall'],
            'aspects' => [
                'love' => $fortune['love'],
                'work' => $fortune['work'],
                'finance' => $fortune['finance'],
                'health' => $fortune['health']
            ],
            'lucky' => [
                'numbers' => implode(", ", $fortune['lucky_numbers']),
                'colors' => $fortune['lucky_colors']
            ],
            'advice' => $fortune['advice'],
            'timestamp' => date('Y-m-d H:i:s')
        ];
    }



    /**
     * р╕Фр╕╣р╕Фр╕зр╕Зр╕Фр╣Йр╕зр╕вр╣Др╕Юр╣Ир╕Чр╕▓р╣Вр╕гр╕Хр╣М
     */
    public function getTarotFortune($userId, $question = null) {
        try {
            // р╕кр╕╕р╣Ир╕бр╣Др╕Юр╣И
            $cards = $this->drawTarotCards();
            
            // р╕Хр╕╡р╕Др╕зр╕▓р╕бр╣Др╕Юр╣И
            $interpretation = $this->interpretTarotCards($cards, $question);

            // р╕Ър╕▒р╕Щр╕Чр╕╢р╕Бр╕Др╕│р╕Чр╕│р╕Щр╕▓р╕в
            $fortune = [
                'cards' => $cards,
                'interpretation' => $interpretation,
                'question' => $question
            ];

            return $this->saveFortune($userId, 'tarot', $question, $fortune);

        } catch (Exception $e) {
            error_log("Error in getTarotFortune: " . $e->getMessage());
            throw $e;
        }
    }


    /**
     * р╕кр╕гр╣Йр╕▓р╕Зр╕Др╕│р╕Чр╕│р╕Щр╕▓р╕вр╕Хр╕▓р╕бр╕гр╕▓р╕ир╕╡
     */
    private function generateZodiacFortune($zodiacData) {
        $fortune = [];

        // р╕Др╕│р╕Щр╕зр╕Ур╕Фр╕зр╕Зр╕Фр╕▓р╕зр╕Ыр╕гр╕░р╕Ир╕│р╕зр╕▒р╕Щ
        $fortune['planetary'] = $this->calculatePlanetaryInfluence($zodiacData);

        // р╕кр╕гр╣Йр╕▓р╕Зр╕Др╕│р╕Чр╕│р╕Щр╕▓р╕вр╣Бр╕Хр╣Ир╕ер╕░р╕Фр╣Йр╕▓р╕Щ
        foreach (self::FORTUNE_ASPECTS as $aspect => $keywords) {
            $fortune[$aspect] = $this->generateZodiacAspect($zodiacData, $aspect);
        }

        // р╣Ар╕Юр╕┤р╣Ир╕бр╕Др╕│р╣Бр╕Щр╕░р╕Щр╕│
        $fortune['advice'] = $this->generateZodiacAdvice($zodiacData);

        return $fortune;
    }


    /**
     * р╕Ър╕▒р╕Щр╕Чр╕╢р╕Бр╕Др╕│р╕Чр╕│р╕Щр╕▓р╕в
     */
    private function saveFortune($userId, $type, $question, $fortune) {
        try {
            // р╣Бр╕Ыр╕ер╕З array р╣Ар╕Ыр╣Зр╕Щ JSON р╕Фр╣Йр╕зр╕в options р╕Юр╕┤р╣Ар╕ир╕й
            $fortuneJson = json_encode($fortune, 
                JSON_UNESCAPED_UNICODE | 
                JSON_UNESCAPED_SLASHES | 
                JSON_PARTIAL_OUTPUT_ON_ERROR
            );

            if (json_last_error() !== JSON_ERROR_NONE) {
                throw new Exception("JSON encode error: " . json_last_error_msg());
            }

            $this->db->query(
                "INSERT INTO fortune_history 
                 (user_id, fortune_type, question, fortune_result, additional_info)
                 VALUES (?, ?, ?, ?, ?)",
                [
                    $userId,
                    $type,
                    $question,
                    $fortuneJson,
                    json_encode(['timestamp' => time()], JSON_UNESCAPED_UNICODE)
                ]
            );

            return $fortune;

        } catch (Exception $e) {
            error_log("Error in saveFortune: " . $e->getMessage());
            throw $e;
        }
    }

    /**
     * р╕Фр╕╢р╕Зр╕Ыр╕гр╕░р╕зр╕▒р╕Хр╕┤р╕Бр╕▓р╕гр╕Фр╕╣р╕Фр╕зр╕З
     */
    public function getFortuneHistory($userId, $limit = 5) {
        try {
            return $this->db->query(
                "SELECT * FROM fortune_history 
                 WHERE user_id = ? 
                 ORDER BY created_at DESC 
                 LIMIT ?",
                [$userId, $limit]
            )->fetchAll();

        } catch (Exception $e) {
            error_log("Error in getFortuneHistory: " . $e->getMessage());
            return [];
        }
    }

    /**
     * Utility functions
     */
    /**
     * р╕Фр╕╢р╕Зр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕гр╕▓р╕ир╕╡
     */
    private function getZodiacData($zodiacName) {
        try {
            // р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕Вр╣Йр╕нр╕бр╕╣р╕ер╣Гр╕Щр╕Рр╕▓р╕Щр╕Вр╣Йр╕нр╕бр╕╣р╕е
            $zodiacData = $this->db->query(
                "SELECT * FROM zodiac_data WHERE zodiac_name = ?",
                [$zodiacName]
            )->fetch();

            // р╕Цр╣Йр╕▓р╣Др╕бр╣Ир╕бр╕╡р╕Вр╣Йр╕нр╕бр╕╣р╕ер╣Гр╕Щ DB р╣Гр╕Кр╣Йр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Юр╕╖р╣Йр╕Щр╕Рр╕▓р╕Щ
            if (!$zodiacData) {
                $zodiacData = $this->getDefaultZodiacData($zodiacName);
            }

            return $zodiacData;
        } catch (Exception $e) {
            error_log("Error in getZodiacData: " . $e->getMessage());
            return $this->getDefaultZodiacData($zodiacName);
        }
    }

    /**
     * р╕Вр╣Йр╕нр╕бр╕╣р╕ер╕гр╕▓р╕ир╕╡р╕Юр╕╖р╣Йр╕Щр╕Рр╕▓р╕Щ
     */
    private function getDefaultZodiacData($zodiacName) {
        $zodiacInfo = [
            'р╕гр╕▓р╕ир╕╡р╣Ар╕бр╕й' => [
                'element' => 'р╣Др╕Я',
                'lucky_colors' => ['р╣Бр╕Фр╕З', 'р╕кр╣Йр╕б'],
                'lucky_numbers' => '1,9',
                'description' => 'р╕гр╕▓р╕ир╕╡р╣Ар╕бр╕йр╣Ар╕Ыр╣Зр╕Щр╕гр╕▓р╕ир╕╡р╣Бр╕лр╣Ир╕Зр╕Др╕зр╕▓р╕бр╕Бр╕ер╣Йр╕▓р╕лр╕▓р╕Н р╕бр╕╡р╕Др╕зр╕▓р╕бр╣Ар╕Ыр╣Зр╕Щр╕Ьр╕╣р╣Йр╕Щр╕│р╕кр╕╣р╕З'
            ],
            'р╕гр╕▓р╕ир╕╡р╕Юр╕др╕йр╕а' => [
                'element' => 'р╕Фр╕┤р╕Щ',
                'lucky_colors' => ['р╣Ар╕Вр╕╡р╕вр╕з', 'р╕Кр╕бр╕Юр╕╣'],
                'lucky_numbers' => '2,6',
                'description' => 'р╕гр╕▓р╕ир╕╡р╕Юр╕др╕йр╕ар╣Ар╕Ыр╣Зр╕Щр╕гр╕▓р╕ир╕╡р╕Чр╕╡р╣Ир╕бр╕╡р╕Др╕зр╕▓р╕бр╕нр╕Фр╕Чр╕Щ р╕гр╕▒р╕Бр╕Др╕зр╕▓р╕бр╕бр╕▒р╣Ир╕Щр╕Др╕З'
            ],
            'р╕гр╕▓р╕ир╕╡р╣Ар╕бр╕Цр╕╕р╕Щ' => [
                'element' => 'р╕ер╕б',
                'lucky_colors' => ['р╣Ар╕лр╕ер╕╖р╕нр╕З', 'р╕Яр╣Йр╕▓'],
                'lucky_numbers' => '3,7',
                'description' => 'р╕гр╕▓р╕ир╕╡р╣Ар╕бр╕Цр╕╕р╕Щр╣Ар╕Ыр╣Зр╕Щр╕гр╕▓р╕ир╕╡р╕Чр╕╡р╣Ир╕Йр╕ер╕▓р╕Ф р╕бр╕╡р╣Др╕лр╕зр╕Юр╕гр╕┤р╕Ър╕Фр╕╡'
            ],
            'р╕гр╕▓р╕ир╕╡р╕Бр╕гр╕Бр╕О' => [
                'element' => 'р╕Щр╣Йр╕│',
                'lucky_colors' => ['р╣Ар╕Зр╕┤р╕Щ', 'р╕Вр╕▓р╕з'],
                'lucky_numbers' => '2,7',
                'description' => 'р╕гр╕▓р╕ир╕╡р╕Бр╕гр╕Бр╕Ор╣Ар╕Ыр╣Зр╕Щр╕гр╕▓р╕ир╕╡р╕Чр╕╡р╣Ир╕нр╣Ир╕нр╕Щр╣Вр╕вр╕Щ р╕бр╕╡р╕Др╕зр╕▓р╕бр╣Ар╕лр╣Зр╕Щр╕нр╕Бр╣Ар╕лр╣Зр╕Щр╣Гр╕Ир╕Ьр╕╣р╣Йр╕нр╕╖р╣Ир╕Щ'
            ],
            'р╕гр╕▓р╕ир╕╡р╕кр╕┤р╕Зр╕лр╣М' => [
                'element' => 'р╣Др╕Я',
                'lucky_colors' => ['р╕Чр╕нр╕З', 'р╣Бр╕Фр╕З'],
                'lucky_numbers' => '1,4',
                'description' => 'р╕гр╕▓р╕ир╕╡р╕кр╕┤р╕Зр╕лр╣Мр╣Ар╕Ыр╣Зр╕Щр╕гр╕▓р╕ир╕╡р╕Чр╕╡р╣Ир╕бр╕╡р╕Др╕зр╕▓р╕бр╣Ар╕Ыр╣Зр╕Щр╕Ьр╕╣р╣Йр╕Щр╕│ р╕бр╕╡р╣Ар╕кр╕Щр╣Ир╕лр╣М'
            ],
            'р╕гр╕▓р╕ир╕╡р╕Бр╕▒р╕Щр╕вр╣М' => [
                'element' => 'р╕Фр╕┤р╕Щ',
                'lucky_colors' => ['р╕Щр╣Йр╕│р╕Хр╕▓р╕е', 'р╣Ар╕Вр╕╡р╕вр╕з'],
                'lucky_numbers' => '5,8',
                'description' => 'р╕гр╕▓р╕ир╕╡р╕Бр╕▒р╕Щр╕вр╣Мр╣Ар╕Ыр╣Зр╕Щр╕гр╕▓р╕ир╕╡р╕Чр╕╡р╣Ир╕бр╕╡р╕Др╕зр╕▓р╕бр╕ер╕░р╣Ар╕нр╕╡р╕вр╕Фр╕гр╕нр╕Ър╕Др╕нр╕Ъ'
            ],
            'р╕гр╕▓р╕ир╕╡р╕Хр╕╕р╕ер╕вр╣М' => [
                'element' => 'р╕ер╕б',
                'lucky_colors' => ['р╕Яр╣Йр╕▓', 'р╕Кр╕бр╕Юр╕╣'],
                'lucky_numbers' => '6,9',
                'description' => 'р╕гр╕▓р╕ир╕╡р╕Хр╕╕р╕ер╕вр╣Мр╣Ар╕Ыр╣Зр╕Щр╕гр╕▓р╕ир╕╡р╕Чр╕╡р╣Ир╕гр╕▒р╕Бр╕Др╕зр╕▓р╕бр╕вр╕╕р╕Хр╕┤р╕Шр╕гр╕гр╕б р╕бр╕╡р╣Ар╕кр╕Щр╣Ир╕лр╣М'
            ],
            'р╕гр╕▓р╕ир╕╡р╕Юр╕┤р╕Ир╕┤р╕Б' => [
                'element' => 'р╕Щр╣Йр╕│',
                'lucky_colors' => ['р╣Бр╕Фр╕Зр╣Ар╕Вр╣Йр╕б', 'р╕бр╣Ир╕зр╕З'],
                'lucky_numbers' => '2,4',
                'description' => 'р╕гр╕▓р╕ир╕╡р╕Юр╕┤р╕Ир╕┤р╕Бр╣Ар╕Ыр╣Зр╕Щр╕гр╕▓р╕ир╕╡р╕Чр╕╡р╣Ир╕бр╕╡р╕Юр╕ер╕▒р╕Зр╣Бр╕ер╕░р╕Др╕зр╕▓р╕бр╕бр╕╕р╣Ир╕Зр╕бр╕▒р╣Ир╕Щр╕кр╕╣р╕З'
            ],
            'р╕гр╕▓р╕ир╕╡р╕Шр╕Щр╕╣' => [
                'element' => 'р╣Др╕Я',
                'lucky_colors' => ['р╕Щр╣Йр╕│р╣Ар╕Зр╕┤р╕Щ', 'р╕бр╣Ир╕зр╕З'],
                'lucky_numbers' => '3,9',
                'description' => 'р╕гр╕▓р╕ир╕╡р╕Шр╕Щр╕╣р╣Ар╕Ыр╣Зр╕Щр╕гр╕▓р╕ир╕╡р╕Чр╕╡р╣Ир╕бр╕нр╕Зр╣Вр╕ер╕Бр╣Гр╕Щр╣Бр╕Зр╣Ир╕Фр╕╡ р╕Кр╕нр╕Ър╕Ьр╕Ир╕Нр╕ар╕▒р╕в'
            ],
            'р╕гр╕▓р╕ир╕╡р╕бр╕▒р╕Зр╕Бр╕г' => [
                'element' => 'р╕Фр╕┤р╕Щ',
                'lucky_colors' => ['р╕Фр╕│', 'р╕Щр╣Йр╕│р╕Хр╕▓р╕е'],
                'lucky_numbers' => '4,8',
                'description' => 'р╕гр╕▓р╕ир╕╡р╕бр╕▒р╕Зр╕Бр╕гр╣Ар╕Ыр╣Зр╕Щр╕гр╕▓р╕ир╕╡р╕Чр╕╡р╣Ир╕бр╕╡р╕Др╕зр╕▓р╕бр╕Чр╕░р╣Ар╕вр╕нр╕Чр╕░р╕вр╕▓р╕Щ р╕бр╕╕р╣Ир╕Зр╕бр╕▒р╣Ир╕Щ'
            ],
            'р╕гр╕▓р╕ир╕╡р╕Бр╕╕р╕бр╕ар╣М' => [
                'element' => 'р╕ер╕б',
                'lucky_colors' => ['р╕Яр╣Йр╕▓', 'р╣Ар╕Чр╕▓'],
                'lucky_numbers' => '4,7',
                'description' => 'р╕гр╕▓р╕ир╕╡р╕Бр╕╕р╕бр╕ар╣Мр╣Ар╕Ыр╣Зр╕Щр╕гр╕▓р╕ир╕╡р╕Чр╕╡р╣Ир╕бр╕╡р╕Др╕зр╕▓р╕бр╕Др╕┤р╕Фр╕кр╕гр╣Йр╕▓р╕Зр╕кр╕гр╕гр╕Др╣М р╕бр╕╡р╕Др╕зр╕▓р╕бр╣Ар╕Ыр╣Зр╕Щр╕Хр╕▒р╕зр╕Вр╕нр╕Зр╕Хр╕▒р╕зр╣Ар╕нр╕З'
            ],
            'р╕гр╕▓р╕ир╕╡р╕бр╕╡р╕Щ' => [
                'element' => 'р╕Щр╣Йр╕│',
                'lucky_colors' => ['р╣Ар╕Вр╕╡р╕вр╕зр╕Щр╣Йр╕│р╕Чр╕░р╣Ар╕е', 'р╕бр╣Ир╕зр╕З'],
                'lucky_numbers' => '3,9',
                'description' => 'р╕гр╕▓р╕ир╕╡р╕бр╕╡р╕Щр╣Ар╕Ыр╣Зр╕Щр╕гр╕▓р╕ир╕╡р╕Чр╕╡р╣Ир╕бр╕╡р╕Др╕зр╕▓р╕бр╕нр╣Ир╕нр╕Щр╣Вр╕вр╕Щ р╕бр╕╡р╕Ир╕┤р╕Щр╕Хр╕Щр╕▓р╕Бр╕▓р╕гр╕кр╕╣р╕З'
            ]
        ];

        return [
            'zodiac_name' => $zodiacName,
            'element' => $zodiacInfo[$zodiacName]['element'] ?? 'р╣Др╕бр╣Ир╕гр╕░р╕Ър╕╕',
            'lucky_color' => implode(', ', $zodiacInfo[$zodiacName]['lucky_colors'] ?? ['р╣Др╕бр╣Ир╕гр╕░р╕Ър╕╕']),
            'lucky_number' => $zodiacInfo[$zodiacName]['lucky_numbers'] ?? 'р╣Др╕бр╣Ир╕гр╕░р╕Ър╕╕',
            'description' => $zodiacInfo[$zodiacName]['description'] ?? 'р╣Др╕бр╣Ир╕бр╕╡р╕Вр╣Йр╕нр╕бр╕╣р╕е'
        ];
    }

    /**
     * р╕Др╕│р╕Щр╕зр╕Ур╕нр╕┤р╕Чр╕Шр╕┤р╕Юр╕ер╕Фр╕зр╕Зр╕Фр╕▓р╕з
     */
    private function calculatePlanetaryInfluence($zodiacData) {
        $elements = [
            'р╣Др╕Я' => ['р╕Фр╕▓р╕зр╕нр╕▒р╕Зр╕Др╕▓р╕г', 'р╕Фр╕зр╕Зр╕нр╕▓р╕Чр╕┤р╕Хр╕вр╣М'],
            'р╕Фр╕┤р╕Щ' => ['р╕Фр╕▓р╕зр╣Ар╕кр╕▓р╕гр╣М', 'р╕Фр╕▓р╕зр╕Юр╕др╕лр╕▒р╕к'],
            'р╕ер╕б' => ['р╕Фр╕▓р╕зр╕Юр╕╕р╕Ш', 'р╕Фр╕▓р╕зр╕нр╕▒р╕Зр╕Др╕▓р╕г'],
            'р╕Щр╣Йр╕│' => ['р╕Фр╕зр╕Зр╕Ир╕▒р╕Щр╕Чр╕гр╣М', 'р╕Фр╕▓р╕зр╕ир╕╕р╕Бр╕гр╣М']
        ];

        $element = $zodiacData['element'];
        $planets = $elements[$element] ?? ['р╕Фр╕зр╕Зр╕нр╕▓р╕Чр╕┤р╕Хр╕вр╣М'];

        return "р╣Др╕Фр╣Йр╕гр╕▒р╕Ър╕нр╕┤р╕Чр╕Шр╕┤р╕Юр╕ер╕Ир╕▓р╕Б" . implode('р╣Бр╕ер╕░', $planets) . 
               " р╕кр╣Ир╕Зр╕Ьр╕ер╣Гр╕лр╣Й" . $this->getPlanetaryEffect($planets[0]);
    }

    /**
     * р╕Ьр╕ер╕Бр╕гр╕░р╕Чр╕Ър╕Ир╕▓р╕Бр╕Фр╕зр╕Зр╕Фр╕▓р╕з
     */
    private function getPlanetaryEffect($planet) {
        $effects = [
            'р╕Фр╕▓р╕зр╕нр╕▒р╕Зр╕Др╕▓р╕г' => 'р╕бр╕╡р╕Юр╕ер╕▒р╕Зр╣Бр╕ер╕░р╕Др╕зр╕▓р╕бр╕Бр╕гр╕░р╕Хр╕╖р╕нр╕гр╕╖р╕нр╕гр╣Йр╕Щр╕кр╕╣р╕З',
            'р╕Фр╕зр╕Зр╕нр╕▓р╕Чр╕┤р╕Хр╕вр╣М' => 'р╕бр╕╡р╕Др╕зр╕▓р╕бр╕бр╕▒р╣Ир╕Щр╣Гр╕Ир╣Бр╕ер╕░р╕Др╕зр╕▓р╕бр╣Ар╕Ыр╣Зр╕Щр╕Ьр╕╣р╣Йр╕Щр╕│',
            'р╕Фр╕▓р╕зр╣Ар╕кр╕▓р╕гр╣М' => 'р╕бр╕╡р╕Др╕зр╕▓р╕бр╕гр╕нр╕Ър╕Др╕нр╕Ър╣Бр╕ер╕░р╕Др╕зр╕▓р╕бр╕нр╕Фр╕Чр╕Щ',
            'р╕Фр╕▓р╕зр╕Юр╕др╕лр╕▒р╕к' => 'р╕бр╕╡р╣Вр╕Кр╕Др╣Бр╕ер╕░р╕Бр╕▓р╕гр╕Вр╕вр╕▓р╕вр╕Хр╕▒р╕зр╕Чр╕╡р╣Ир╕Фр╕╡',
            'р╕Фр╕▓р╕зр╕Юр╕╕р╕Ш' => 'р╕бр╕╡р╕Ыр╕▒р╕Нр╕Нр╕▓р╣Бр╕ер╕░р╕Бр╕▓р╕гр╕кр╕╖р╣Ир╕нр╕кр╕▓р╕гр╕Чр╕╡р╣Ир╕Фр╕╡',
            'р╕Фр╕зр╕Зр╕Ир╕▒р╕Щр╕Чр╕гр╣М' => 'р╕бр╕╡р╕Др╕зр╕▓р╕бр╕нр╣Ир╕нр╕Щр╣Вр╕вр╕Щр╣Бр╕ер╕░р╕Др╕зр╕▓р╕бр╣Ар╕Вр╣Йр╕▓р╣Гр╕И',
            'р╕Фр╕▓р╕зр╕ир╕╕р╕Бр╕гр╣М' => 'р╕бр╕╡р╣Ар╕кр╕Щр╣Ир╕лр╣Мр╣Бр╕ер╕░р╕Др╕зр╕▓р╕бр╕кр╕▒р╕бр╕Юр╕▒р╕Щр╕Шр╣Мр╕Чр╕╡р╣Ир╕Фр╕╡'
        ];

        return $effects[$planet] ?? 'р╕бр╕╡р╕Юр╕ер╕▒р╕Зр╕Зр╕▓р╕Щр╕Чр╕╡р╣Ир╕Фр╕╡';
    }

    /**
     * р╕кр╕гр╣Йр╕▓р╕Зр╕Др╕│р╕Чр╕│р╕Щр╕▓р╕вр╕Хр╕▓р╕бр╕гр╕▓р╕ир╕╡
     */
    private function generateZodiacAspect($zodiacData, $aspect) {
        $base = match($aspect) {
            'overall' => "р╕Фр╣Йр╕зр╕вр╕нр╕┤р╕Чр╕Шр╕┤р╕Юр╕ер╕Вр╕нр╕З{$zodiacData['element']}р╕Шр╕▓р╕Хр╕╕ " . 
                        $this->calculatePlanetaryInfluence($zodiacData),
            'love' => "р╕Фр╣Йр╕▓р╕Щр╕Др╕зр╕▓р╕бр╕гр╕▒р╕Б р╕Др╕Щр╕гр╕▓р╕ир╕╡{$zodiacData['zodiac_name']}р╕Кр╣Ир╕зр╕Зр╕Щр╕╡р╣Й " .
                     $this->getZodiacLoveFortune($zodiacData['element']),
            'work' => "р╣Ар╕гр╕╖р╣Ир╕нр╕Зр╕Бр╕▓р╕гр╕Зр╕▓р╕Щ " . $this->getZodiacWorkFortune($zodiacData['element']),
            'finance' => "р╕Фр╣Йр╕▓р╕Щр╕Бр╕▓р╕гр╣Ар╕Зр╕┤р╕Щ " . $this->getZodiacFinanceFortune($zodiacData['element']),
            'health' => "р╕кр╕╕р╕Вр╕ар╕▓р╕Ю " . $this->getZodiacHealthFortune($zodiacData['element']),
            default => "р╕Фр╕зр╕Зр╕Фр╕▓р╕зр╕кр╣Ир╕Зр╕Ьр╕ер╕Фр╕╡р╕Хр╣Ир╕нр╕Др╕╕р╕У"
        };

        return $base . " " . $this->getZodiacAdvice($zodiacData['element']);
    }

    private function getZodiacLoveFortune($element) {
        $fortunes = [
            'р╣Др╕Я' => "р╕бр╕╡р╣Ар╕кр╕Щр╣Ир╕лр╣Мр╣Бр╕ер╕░р╕Др╕зр╕▓р╕бр╕бр╕▒р╣Ир╕Щр╣Гр╕Ир╕кр╕╣р╕З р╕бр╕╡р╣Вр╕нр╕Бр╕▓р╕кр╕Юр╕Ър╕Др╕Щр╕Цр╕╣р╕Бр╣Гр╕И тЭдя╕П",
            'р╕Фр╕┤р╕Щ' => "р╕Др╕зр╕▓р╕бр╕гр╕▒р╕Бр╕бр╕▒р╣Ир╕Щр╕Др╕З р╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕Вр╕Бр╕▒р╕Ър╕Др╕Щр╕гр╕нр╕Ър╕Вр╣Йр╕▓р╕З ЁЯТС",
            'р╕ер╕б' => "р╕бр╕╡р╣Вр╕нр╕Бр╕▓р╕кр╣Гр╕лр╕бр╣Ир╣Ж р╣Гр╕Щр╕Др╕зр╕▓р╕бр╕гр╕▒р╕Б р╣Ар╕Ыр╣Зр╕Щр╕Кр╣Ир╕зр╕Зр╕Чр╕╡р╣Ир╕Фр╕╡р╕кр╕│р╕лр╕гр╕▒р╕Ър╕Бр╕▓р╕гр╣Ар╕гр╕┤р╣Ир╕бр╕Хр╣Йр╕Щ ЁЯТХ",
            'р╕Щр╣Йр╕│' => "р╕Др╕зр╕▓р╕бр╕гр╕▒р╕Бр╕ер╕╢р╕Бр╕Лр╕╢р╣Йр╕З р╣Ар╕Вр╣Йр╕▓р╣Гр╕Ир╕Бр╕▒р╕Щр╕бр╕▓р╕Бр╕Вр╕╢р╣Йр╕Щ р╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕Вр╕Чр╕▓р╕Зр╣Гр╕И ЁЯТЦ"
        ];

        return $fortunes[$element] ?? "р╕Др╕зр╕▓р╕бр╕гр╕▒р╕Бр╕бр╕╡р╣Бр╕Щр╕зр╣Вр╕Щр╣Йр╕бр╕Чр╕╡р╣Ир╕Фр╕╡ ЁЯТЭ";
    }

    private function getZodiacWorkFortune($element) {
        $fortunes = [
            'р╣Др╕Я' => "р╕бр╕╡р╕Юр╕ер╕▒р╕Зр╣Гр╕Щр╕Бр╕▓р╕гр╕Чр╕│р╕Зр╕▓р╕Щ р╣Др╕Фр╣Йр╕гр╕▒р╕Ър╕Бр╕▓р╕гр╕вр╕нр╕бр╕гр╕▒р╕Ъ ЁЯТк",
            'р╕Фр╕┤р╕Щ' => "р╕Зр╕▓р╕Щр╕бр╕▒р╣Ир╕Щр╕Др╕З р╕бр╕╡р╣Вр╕нр╕Бр╕▓р╕кр╕Бр╣Йр╕▓р╕зр╕лр╕Щр╣Йр╕▓ ЁЯУИ",
            'р╕ер╕б' => "р╕бр╕╡р╣Др╕нр╣Ар╕Фр╕╡р╕вр╣Гр╕лр╕бр╣Ир╣Ж р╣Гр╕Щр╕Бр╕▓р╕гр╕Чр╕│р╕Зр╕▓р╕Щ р╣Ар╕лр╕бр╕▓р╕░р╕Бр╕▒р╕Ър╕Зр╕▓р╕Щр╕кр╕гр╣Йр╕▓р╕Зр╕кр╕гр╕гр╕Др╣М ЁЯОи",
            'р╕Щр╣Йр╕│' => "р╕Зр╕▓р╕Щр╕гр╕▓р╕Ър╕гр╕╖р╣Ир╕Щ р╣Гр╕Кр╣Йр╕Др╕зр╕▓р╕бр╕гр╕╣р╣Йр╕кр╕╢р╕Бр╕Щр╕│р╕Чр╕▓р╕З р╕Ыр╕гр╕░р╕кр╕Ър╕Др╕зр╕▓р╕бр╕кр╕│р╣Ар╕гр╣Зр╕И ЁЯМК"
        ];

        return $fortunes[$element] ?? "р╕Бр╕▓р╕гр╕Зр╕▓р╕Щр╕бр╕╡р╕Др╕зр╕▓р╕бр╕Бр╣Йр╕▓р╕зр╕лр╕Щр╣Йр╕▓ ЁЯУК";
    }

    private function getZodiacFinanceFortune($element) {
        $fortunes = [
            'р╣Др╕Я' => "р╕бр╕╡р╣Вр╕нр╕Бр╕▓р╕кр╕Чр╕▓р╕Зр╕Бр╕▓р╕гр╣Ар╕Зр╕┤р╕Щр╕Фр╕╡ р╕гр╕▓р╕вр╣Др╕Фр╣Йр╣Ар╕Юр╕┤р╣Ир╕бр╕Вр╕╢р╣Йр╕Щ ЁЯТ░",
            'р╕Фр╕┤р╕Щ' => "р╕Бр╕▓р╕гр╣Ар╕Зр╕┤р╕Щр╕бр╕▒р╣Ир╕Щр╕Др╕З р╕бр╕╡р╣Вр╕нр╕Бр╕▓р╕кр╕ер╕Зр╕Чр╕╕р╕Щ ЁЯТО",
            'р╕ер╕б' => "р╕бр╕╡р╕Кр╣Ир╕нр╕Зр╕Чр╕▓р╕Зр╕гр╕▓р╕вр╣Др╕Фр╣Йр╣Гр╕лр╕бр╣Ир╣Ж р╣Вр╕Кр╕Др╕ер╕▓р╕ар╣Ар╕Вр╣Йр╕▓р╕бр╕▓ ЁЯНА",
            'р╕Щр╣Йр╕│' => "р╕Бр╕▓р╕гр╣Ар╕Зр╕┤р╕Щр╣Др╕лр╕ер╕ер╕╖р╣Ир╕Щ р╕бр╕╡р╣Ар╕Зр╕┤р╕Щр╕кр╕│р╕гр╕нр╕Зр╣Ар╕Юр╕╡р╕вр╕Зр╕Юр╕н ЁЯТл"
        ];

        return $fortunes[$element] ?? "р╕Бр╕▓р╕гр╣Ар╕Зр╕┤р╕Щр╕бр╕╡р╣Бр╕Щр╕зр╣Вр╕Щр╣Йр╕бр╕Чр╕╡р╣Ир╕Фр╕╡ ЁЯТ╡";
    }

    private function getZodiacHealthFortune($element) {
        $fortunes = [
            'р╣Др╕Я' => "р╕Юр╕ер╕▒р╕Зр╕Зр╕▓р╕Щр╕кр╕╣р╕З р╕Др╕зр╕гр╕нр╕нр╕Бр╕Бр╕│р╕ер╕▒р╕Зр╕Бр╕▓р╕вр╕кр╕бр╣Ир╕│р╣Ар╕кр╕бр╕н ЁЯПГ",
            'р╕Фр╕┤р╕Щ' => "р╕кр╕╕р╕Вр╕ар╕▓р╕Юр╣Бр╕Вр╣Зр╕Зр╣Бр╕гр╕З р╕Чр╕▓р╕Щр╕нр╕▓р╕лр╕▓р╕гр╕Чр╕╡р╣Ир╕бр╕╡р╕Ыр╕гр╕░р╣Вр╕вр╕Кр╕Щр╣М ЁЯеЧ",
            'р╕ер╕б' => "р╕гр╣Ир╕▓р╕Зр╕Бр╕▓р╕вр╕вр╕╖р╕Фр╕лр╕вр╕╕р╣Ир╕Щр╕Фр╕╡ р╣Ар╕лр╕бр╕▓р╕░р╕Бр╕▒р╕Ър╕Бр╕▓р╕гр╕Эр╕╢р╕Бр╣Вр╕вр╕Др╕░ ЁЯзШ",
            'р╕Щр╣Йр╕│' => "р╕кр╕╕р╕Вр╕ар╕▓р╕Юр╕Ир╕┤р╕Хр╕Фр╕╡ р╕Др╕зр╕гр╕Юр╕▒р╕Бр╕Ьр╣Ир╕нр╕Щр╣Гр╕лр╣Йр╣Ар╕Юр╕╡р╕вр╕Зр╕Юр╕н ЁЯШ┤"
        ];

        return $fortunes[$element] ?? "р╕кр╕╕р╕Вр╕ар╕▓р╕Юр╣Вр╕Фр╕вр╕гр╕зр╕бр╕Фр╕╡ ЁЯТк";
    }
    private function getZodiacAdvice($element) {
        $advice = [
            'р╣Др╕Я' => "р╕Др╕зр╕гр╕гр╕░р╕зр╕▒р╕Зр╕Др╕зр╕▓р╕бр╣Гр╕Ир╕гр╣Йр╕нр╕Щ р╣Гр╕Кр╣Йр╕Юр╕ер╕▒р╕Зр╕Зр╕▓р╕Щр╕нр╕вр╣Ир╕▓р╕Зр╕кр╕гр╣Йр╕▓р╕Зр╕кр╕гр╕гр╕Др╣М ЁЯФе",
            'р╕Фр╕┤р╕Щ' => "р╕гр╕▒р╕Бр╕йр╕▓р╕Др╕зр╕▓р╕бр╕бр╕▒р╣Ир╕Щр╕Др╕З р╕зр╕▓р╕Зр╣Бр╕Ьр╕Щр╕нр╕Щр╕▓р╕Др╕Хр╣Гр╕лр╣Йр╕Фр╕╡ ЁЯМ▒",
            'р╕ер╕б' => "р╣Ар╕Ыр╕┤р╕Фр╣Гр╕Ир╕гр╕▒р╕Ър╕кр╕┤р╣Ир╕Зр╣Гр╕лр╕бр╣Ир╣Ж р╣Бр╕Хр╣Ир╕нр╕вр╣Ир╕▓р╕ер╕╖р╕бр╕гр╕▓р╕Бр╣Ар╕лр╕Зр╣Йр╕▓ ЁЯНГ",
            'р╕Щр╣Йр╕│' => "р╣Гр╕Кр╣Йр╕Др╕зр╕▓р╕бр╕гр╕╣р╣Йр╕кр╕╢р╕Бр╕Щр╕│р╕Чр╕▓р╕З р╣Бр╕Хр╣Ир╕нр╕вр╣Ир╕▓р╕ер╕╖р╕бр╣Гр╕Кр╣Йр╣Ар╕лр╕Хр╕╕р╕Ьр╕ер╕Ыр╕гр╕░р╕Бр╕нр╕Ъ ЁЯМК"
        ];

        return $advice[$element] ?? "р╕гр╕▒р╕Бр╕йр╕▓р╕кр╕бр╕Фр╕╕р╕ер╣Гр╕Щр╕Кр╕╡р╕зр╕┤р╕Х р╣Бр╕ер╕░р╕бр╕нр╕Зр╣Вр╕ер╕Бр╣Гр╕Щр╣Бр╕Зр╣Ир╕Фр╕╡ тЬи";
    }

    /**
     * р╕Фр╕╣р╕Фр╕зр╕Зр╕Хр╕▓р╕бр╕гр╕▓р╕ир╕╡
     */
    public function getZodiacFortune($userId, $zodiacName = null) {
        try {
            $user = $this->userHandler->getUserProfile($userId);
            
            // р╕Цр╣Йр╕▓р╣Др╕бр╣Ир╕гр╕░р╕Ър╕╕р╕гр╕▓р╕ир╕╡ р╣Гр╕Кр╣Йр╕гр╕▓р╕ир╕╡р╕Вр╕нр╕З user
            $zodiac = $zodiacName ?? $user['zodiac'];
            if (!$zodiac) {
                throw new Exception("р╣Др╕бр╣Ир╕Юр╕Ър╕Вр╣Йр╕нр╕бр╕╣р╕ер╕гр╕▓р╕ир╕╡ р╕Бр╕гр╕╕р╕Ур╕▓р╕гр╕░р╕Ър╕╕р╕гр╕▓р╕ир╕╡р╕Вр╕нр╕Зр╕Др╕╕р╕Ур╕Бр╣Ир╕нр╕Щр╕Др╣Ир╕░");
            }

            // р╕Фр╕╢р╕Зр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕гр╕▓р╕ир╕╡
            $zodiacData = $this->getZodiacData($zodiac);
            
            // р╕кр╕гр╣Йр╕▓р╕Зр╕Др╕│р╕Чр╕│р╕Щр╕▓р╕в
            $fortune = [
                'zodiac' => $zodiacData['zodiac_name'],
                'element' => $zodiacData['element'],
                'description' => $zodiacData['description'],
                'readings' => [
                    'overall' => $this->generateZodiacAspect($zodiacData, 'overall'),
                    'love' => $this->generateZodiacAspect($zodiacData, 'love'),
                    'work' => $this->generateZodiacAspect($zodiacData, 'work'),
                    'finance' => $this->generateZodiacAspect($zodiacData, 'finance'),
                    'health' => $this->generateZodiacAspect($zodiacData, 'health')
                ],
                'lucky' => [
                    'colors' => explode(', ', $zodiacData['lucky_color']),
                    'numbers' => explode(',', $zodiacData['lucky_number'])
                ],
                'planetary' => $this->calculatePlanetaryInfluence($zodiacData)
            ];

            // р╕Ър╕▒р╕Щр╕Чр╕╢р╕Бр╕Др╕│р╕Чр╕│р╕Щр╕▓р╕в
            return $this->saveFortune($userId, 'zodiac', $zodiac, $fortune);

        } catch (Exception $e) {
            error_log("Error in getZodiacFortune: " . $e->getMessage());
            throw $e;
        }
    }

    /**
     * р╕кр╕╕р╣Ир╕бр╣Др╕Юр╣Ир╕Чр╕▓р╣Вр╕гр╕Хр╣М
     */
    private function drawTarotCards($count = 3) {
        try {
            // р╣Ар╕Юр╕┤р╣Ир╕бр╕Вр╣Йр╕нр╕бр╕╣р╕ер╣Др╕Юр╣Ир╕Чр╕▓р╣Вр╕гр╕Хр╣Мр╕Цр╣Йр╕▓р╕вр╕▒р╕Зр╣Др╕бр╣Ир╕бр╕╡
            $this->initializeTarotCards();

            // р╣Гр╕Кр╣Й LIMIT р╣Вр╕Фр╕вр╕Хр╕гр╕Зр╣Бр╕Чр╕Щр╕Бр╕▓р╕гр╣Гр╕Кр╣Й parameter
            $sql = "SELECT * FROM tarot_cards ORDER BY RAND() LIMIT " . (int)$count;
            $cards = $this->db->query($sql)->fetchAll();

            // р╕кр╕╕р╣Ир╕бр╕зр╣Ир╕▓р╣Др╕Юр╣Ир╕лр╕Зр╕▓р╕вр╕лр╕гр╕╖р╕нр╕Др╕зр╣Ир╕│
            foreach ($cards as &$card) {
                $card['is_reversed'] = (rand(0, 1) == 1);
            }

            return $cards;

        } catch (Exception $e) {
            error_log("Error in drawTarotCards: " . $e->getMessage());
            // р╕Цр╣Йр╕▓р╣Др╕бр╣Ир╕кр╕▓р╕бр╕▓р╕гр╕Цр╕Фр╕╢р╕Зр╣Др╕Юр╣Ир╣Др╕Фр╣Й р╣Гр╕Кр╣Йр╣Др╕Юр╣И default
            return $this->getDefaultTarotCards($count);
        }
    }

    /**
     * р╣Др╕Юр╣И default р╕Бр╕гр╕Ур╕╡р╕бр╕╡р╕Ыр╕▒р╕Нр╕лр╕▓р╕Бр╕▒р╕Ър╕Рр╕▓р╕Щр╕Вр╣Йр╕нр╕бр╕╣р╕е
     */
    private function getDefaultTarotCards($count) {
        $defaultCards = [
            [
                'name' => 'The Fool',
                'type' => 'Major Arcana',
                'meaning_upright' => 'р╕Бр╕▓р╕гр╣Ар╕гр╕┤р╣Ир╕бр╕Хр╣Йр╕Щр╣Гр╕лр╕бр╣И р╣Вр╕нр╕Бр╕▓р╕кр╣Гр╕лр╕бр╣И р╕Бр╕▓р╕гр╕Ьр╕Ир╕Нр╕ар╕▒р╕в',
                'meaning_reversed' => 'р╕Др╕зр╕▓р╕бр╕Ыр╕гр╕░р╕бр╕▓р╕Ч р╕Бр╕▓р╕гр╕Хр╕▒р╕Фр╕кр╕┤р╕Щр╣Гр╕Ир╕Ьр╕┤р╕Фр╕Юр╕ер╕▓р╕Ф',
                'is_reversed' => (rand(0, 1) == 1)
            ],
            [
                'name' => 'The Magician',
                'type' => 'Major Arcana',
                'meaning_upright' => 'р╕Др╕зр╕▓р╕бр╕кр╕▓р╕бр╕▓р╕гр╕Ц р╕Юр╕ер╕▒р╕Зр╕кр╕гр╣Йр╕▓р╕Зр╕кр╕гр╕гр╕Др╣М р╕Др╕зр╕▓р╕бр╕кр╕│р╣Ар╕гр╣Зр╕И',
                'meaning_reversed' => 'р╕Бр╕▓р╕гр╣Гр╕Кр╣Йр╕Юр╕ер╕▒р╕Зр╣Гр╕Щр╕Чр╕▓р╕Зр╕Чр╕╡р╣Ир╕Ьр╕┤р╕Ф р╕Бр╕▓р╕гр╕лр╕ер╕нр╕Бр╕ер╕зр╕З',
                'is_reversed' => (rand(0, 1) == 1)
            ],
            [
                'name' => 'The High Priestess',
                'type' => 'Major Arcana',
                'meaning_upright' => 'р╕Нр╕▓р╕Ур╕лр╕вр╕▒р╣Ир╕Зр╕гр╕╣р╣Й р╕Др╕зр╕▓р╕бр╕ер╕╢р╕Бр╕ер╕▒р╕Ъ р╕кр╕▒р╕Нр╕Кр╕▓р╕Хр╕Нр╕▓р╕У',
                'meaning_reversed' => 'р╕Др╕зр╕▓р╕бр╕ер╕▒р╕Зр╣Ар╕е р╕Бр╕▓р╕гр╕Ыр╕┤р╕Фр╕Бр╕▒р╣Йр╕Щр╕кр╕▒р╕Нр╕Кр╕▓р╕Хр╕Нр╕▓р╕У',
                'is_reversed' => (rand(0, 1) == 1)
            ]
        ];

        return array_slice($defaultCards, 0, $count);
    }

    /**
     * р╣Ар╕Юр╕┤р╣Ир╕бр╕Вр╣Йр╕нр╕бр╕╣р╕ер╣Др╕Юр╣Ир╕Чр╕▓р╣Вр╕гр╕Хр╣Мр╕Юр╕╖р╣Йр╕Щр╕Рр╕▓р╕Щ
     */
    private function initializeTarotCards() {
        try {
            // р╣Ар╕Кр╣Зр╕Др╕зр╣Ир╕▓р╕бр╕╡р╕Вр╣Йр╕нр╕бр╕╣р╕ер╣Др╕Юр╣Ир╕лр╕гр╕╖р╕нр╕вр╕▒р╕З
            $count = $this->db->query("SELECT COUNT(*) as count FROM tarot_cards")->fetch();
            
            if ($count['count'] == 0) {
                // р╣Ар╕Юр╕┤р╣Ир╕бр╕Вр╣Йр╕нр╕бр╕╣р╕ер╣Др╕Юр╣Ир╕Юр╕╖р╣Йр╕Щр╕Рр╕▓р╕Щ
                $basicCards = [
                    [
                        'name' => 'The Fool',
                        'type' => 'Major Arcana',
                        'meaning_upright' => 'р╕Бр╕▓р╕гр╣Ар╕гр╕┤р╣Ир╕бр╕Хр╣Йр╕Щр╣Гр╕лр╕бр╣И р╣Вр╕нр╕Бр╕▓р╕кр╣Гр╕лр╕бр╣И р╕Бр╕▓р╕гр╕Ьр╕Ир╕Нр╕ар╕▒р╕в р╕Др╕зр╕▓р╕бр╣Др╕гр╣Йр╣Ар╕Фр╕╡р╕вр╕Зр╕кр╕▓',
                        'meaning_reversed' => 'р╕Др╕зр╕▓р╕бр╕Ыр╕гр╕░р╕бр╕▓р╕Ч р╕Бр╕▓р╕гр╕Хр╕▒р╕Фр╕кр╕┤р╕Щр╣Гр╕Ир╕Ьр╕┤р╕Фр╕Юр╕ер╕▓р╕Ф р╕Др╕зр╕▓р╕бр╣Др╕бр╣Ир╕гр╕нр╕Ър╕Др╕нр╕Ъ',
                        'keywords' => 'adventure,beginning,innocence'
                    ],
                    [
                        'name' => 'The Magician',
                        'type' => 'Major Arcana',
                        'meaning_upright' => 'р╕Др╕зр╕▓р╕бр╕кр╕▓р╕бр╕▓р╕гр╕Ц р╕Юр╕ер╕▒р╕Зр╕кр╕гр╣Йр╕▓р╕Зр╕кр╕гр╕гр╕Др╣М р╕Др╕зр╕▓р╕бр╕кр╕│р╣Ар╕гр╣Зр╕И р╕Бр╕▓р╕гр╣Др╕Фр╣Йр╣Гр╕Кр╣Йр╕ир╕▒р╕Бр╕вр╕ар╕▓р╕Ю',
                        'meaning_reversed' => 'р╕Бр╕▓р╕гр╣Гр╕Кр╣Йр╕Юр╕ер╕▒р╕Зр╣Гр╕Щр╕Чр╕▓р╕Зр╕Чр╕╡р╣Ир╕Ьр╕┤р╕Ф р╕Бр╕▓р╕гр╕лр╕ер╕нр╕Бр╕ер╕зр╕З р╕Др╕зр╕▓р╕бр╣Др╕бр╣Ир╕бр╕▒р╣Ир╕Щр╣Гр╕И',
                        'keywords' => 'power,skill,creativity'
                    ],
                    [
                        'name' => 'The High Priestess',
                        'type' => 'Major Arcana',
                        'meaning_upright' => 'р╕Нр╕▓р╕Ур╕лр╕вр╕▒р╣Ир╕Зр╕гр╕╣р╣Й р╕Др╕зр╕▓р╕бр╕ер╕╢р╕Бр╕ер╕▒р╕Ъ р╕кр╕▒р╕Нр╕Кр╕▓р╕Хр╕Нр╕▓р╕У р╕Бр╕▓р╕гр╣Ар╕гр╕╡р╕вр╕Щр╕гр╕╣р╣Й',
                        'meaning_reversed' => 'р╕Др╕зр╕▓р╕бр╕ер╕▒р╕Зр╣Ар╕е р╕Бр╕▓р╕гр╕Ыр╕┤р╕Фр╕Бр╕▒р╣Йр╕Щр╕кр╕▒р╕Нр╕Кр╕▓р╕Хр╕Нр╕▓р╕У р╕Др╕зр╕▓р╕бр╣Др╕бр╣Ир╣Бр╕Щр╣Ир╣Гр╕И',
                        'keywords' => 'intuition,mystery,spirituality'
                    ]
                ];

                foreach ($basicCards as $card) {
                    $this->db->query(
                        "INSERT INTO tarot_cards 
                         (name, type, meaning_upright, meaning_reversed, keywords)
                         VALUES (?, ?, ?, ?, ?)",
                        [
                            $card['name'],
                            $card['type'],
                            $card['meaning_upright'],
                            $card['meaning_reversed'],
                            $card['keywords']
                        ]
                    );
                }
            }
        } catch (Exception $e) {
            error_log("Error initializing tarot cards: " . $e->getMessage());
            // р╣Др╕бр╣Ир╕Хр╣Йр╕нр╕З throw exception р╣Ар╕Юр╕гр╕▓р╕░р╕бр╕╡ fallback р╣Бр╕ер╣Йр╕з
        }
    }

    /**
     * р╕Хр╕╡р╕Др╕зр╕▓р╕бр╣Др╕Юр╣Ир╕Чр╕▓р╣Вр╕гр╕Хр╣М
     */
    private function interpretTarotCards($cards, $question = null) {
        $positions = [
            0 => ['name' => 'р╕нр╕Фр╕╡р╕Х/р╕кр╕▓р╣Ар╕лр╕Хр╕╕', 'desc' => 'р╕кр╕┤р╣Ир╕Зр╕Чр╕╡р╣Ир╕Ьр╣Ир╕▓р╕Щр╕бр╕▓р╕лр╕гр╕╖р╕нр╕кр╕▓р╣Ар╕лр╕Хр╕╕р╕Вр╕нр╕Зр╕кр╕Цр╕▓р╕Щр╕Бр╕▓р╕гр╕Ур╣М'],
            1 => ['name' => 'р╕Ыр╕▒р╕Ир╕Ир╕╕р╕Ър╕▒р╕Щ/р╕кр╕Цр╕▓р╕Щр╕Бр╕▓р╕гр╕Ур╣М', 'desc' => 'р╕кр╕Цр╕▓р╕Щр╕Бр╕▓р╕гр╕Ур╣Мр╕Ыр╕▒р╕Ир╕Ир╕╕р╕Ър╕▒р╕Щ'],
            2 => ['name' => 'р╕нр╕Щр╕▓р╕Др╕Х/р╣Бр╕Щр╕зр╣Вр╕Щр╣Йр╕б', 'desc' => 'р╕кр╕┤р╣Ир╕Зр╕Чр╕╡р╣Ир╕Ир╕░р╣Ар╕Бр╕┤р╕Фр╕Вр╕╢р╣Йр╕Щр╕лр╕гр╕╖р╕нр╣Бр╕Щр╕зр╕Чр╕▓р╕Зр╕Чр╕╡р╣Ир╕Др╕зр╕гр╕Чр╕│']
        ];

        $interpretation = [];

        foreach ($cards as $index => $card) {
            $position = $positions[$index] ?? ['name' => 'р╣Ар╕Юр╕┤р╣Ир╕бр╣Ар╕Хр╕┤р╕б', 'desc' => 'р╕Вр╣Йр╕нр╕бр╕╣р╕ер╣Ар╕Юр╕┤р╣Ир╕бр╣Ар╕Хр╕┤р╕б'];
            $meaning = $card['is_reversed'] ? $card['meaning_reversed'] : $card['meaning_upright'];

            $interpretation[] = [
                'position' => $position['name'],
                'description' => $position['desc'],
                'card' => [
                    'name' => $card['name'],
                    'is_reversed' => $card['is_reversed'],
                    'meaning' => $meaning
                ]
            ];
        }

        return [
            'question' => $question,
            'cards' => $interpretation,
            'overall_meaning' => $this->generateOverallTarotMeaning($interpretation)
        ];
    }

    /**
     * р╕кр╕гр╣Йр╕▓р╕Зр╕Др╕│р╕Чр╕│р╕Щр╕▓р╕вр╕гр╕зр╕бр╕Ир╕▓р╕Бр╣Др╕Юр╣Ир╕Чр╕▒р╣Йр╕Зр╕лр╕бр╕Ф
     */
    private function generateOverallTarotMeaning($interpretation) {
        $message = "р╕Ир╕▓р╕Бр╕Бр╕▓р╕гр╣Ар╕Ыр╕┤р╕Фр╣Др╕Юр╣Ир╕Чр╕▒р╣Йр╕Зр╕лр╕бр╕Ф р╣Бр╕кр╕Фр╕Зр╣Гр╕лр╣Йр╣Ар╕лр╣Зр╕Щр╕зр╣Ир╕▓:\n\n";

        foreach ($interpretation as $reading) {
            $cardStatus = $reading['card']['is_reversed'] ? "(р╕Др╕зр╣Ир╕│)" : "(р╕лр╕Зр╕▓р╕в)";
            $message .= "ЁЯО┤ {$reading['position']}: р╣Др╕Юр╣И {$reading['card']['name']} {$cardStatus}\n";
            $message .= "   {$reading['card']['meaning']}\n\n";
        }

        return $message;
    }

}